{"version":3,"file":"blocks/image-gallery/view.js","mappings":"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","sources":["webpack://frontis-blocks/./src/blocks/image-gallery/view.js"],"sourcesContent":["// document.addEventListener('DOMContentLoaded', () => {\n//     const galleryWrappers = document.querySelectorAll('.fb-image-gallery-items');\n\n//     galleryWrappers.forEach((galleryWrapper) => {\n//         const blockID = galleryWrapper.getAttribute('data-id');\n//         const lightboxLinks = galleryWrapper.querySelectorAll(`.fb-image-gallery-item`);\n//         const galleryImages = Array.from(lightboxLinks);\n//         let currentIndex = 0;\n\n//         function openLightbox(index) {\n//             currentIndex = index;\n//             const lightbox = document.createElement('div');\n//             lightbox.classList.add('lightbox', blockID);\n//             lightbox.innerHTML = `\n//                 <div class=\"lightbox-content\">\n//                     <button class=\"lightbox-close\">&times;</button>\n//                     <div class=\"lightbox-counter\">${currentIndex + 1} / ${galleryImages.length}</div>\n//                     <button class=\"lightbox-prev\">&#10094;</button>\n//                     <button class=\"lightbox-next\">&#10095;</button>\n//                     <div class=\"lightbox-image-container\">\n//                         <img src=\"${galleryImages[currentIndex].getAttribute('href')}\" alt=\"\">\n//                     </div>\n//                     <div class=\"lightbox-thumbnails\">\n//                         ${galleryImages.map((img, idx) => `\n//                             <img src=\"${img.getAttribute('href')}\" \n//                                  class=\"thumbnail ${idx === currentIndex ? 'active' : ''}\" \n//                                  data-index=\"${idx}\" />\n//                         `).join('')}\n//                     </div>\n//                 </div>\n//             `;\n//             document.body.appendChild(lightbox);\n\n//             // Add event listeners for lightbox buttons and thumbnails\n//             lightbox.querySelector('.lightbox-close').addEventListener('click', closeLightbox);\n//             lightbox.querySelector('.lightbox-prev').addEventListener('click', prevImage);\n//             lightbox.querySelector('.lightbox-next').addEventListener('click', nextImage);\n//             lightbox.querySelectorAll('.thumbnail').forEach(thumbnail => {\n//                 thumbnail.addEventListener('click', (e) => {\n//                     currentIndex = parseInt(e.target.getAttribute('data-index'));\n//                     updateLightboxImage();\n//                 });\n//             });\n\n//             // Add keydown event listener for navigation with arrow keys\n//             document.addEventListener('keydown', handleKeyNavigation);\n\n//             function closeLightbox() {\n//                 lightbox.remove();\n//                 document.removeEventListener('keydown', handleKeyNavigation);\n//             }\n\n//             function nextImage() {\n//                 currentIndex = (currentIndex + 1) % galleryImages.length;\n//                 updateLightboxImage();\n//             }\n\n//             function prevImage() {\n//                 currentIndex = (currentIndex - 1 + galleryImages.length) % galleryImages.length;\n//                 updateLightboxImage();\n//             }\n\n//             function updateLightboxImage() {\n//                 const newImage = galleryImages[currentIndex].getAttribute('href');\n//                 lightbox.querySelector('.lightbox-image-container img').src = newImage;\n//                 lightbox.querySelector('.lightbox-counter').textContent = `${currentIndex + 1} / ${galleryImages.length}`;\n//                 lightbox.querySelectorAll('.thumbnail').forEach((thumb, idx) => {\n//                     thumb.classList.toggle('active', idx === currentIndex);\n//                 });\n//             }\n\n//             function handleKeyNavigation(event) {\n//                 if (event.key === 'ArrowRight') {\n//                     nextImage();\n//                 } else if (event.key === 'ArrowLeft') {\n//                     prevImage();\n//                 } else if (event.key === 'Escape') {\n//                     closeLightbox();\n//                 }\n//             }\n//         }\n\n//         galleryImages.forEach((link, index) => {\n//             link.addEventListener('click', (event) => {\n//                 event.preventDefault();\n//                 openLightbox(index);\n//             });\n//         });\n//     });\n// });\n\n\n\n(function() {\n    function initImageGallery() {\n        const galleryWrappers = document.querySelectorAll('.fb-image-gallery-items');\n        \n        galleryWrappers.forEach(function(galleryWrapper) {\n            var blockID = galleryWrapper.getAttribute('data-id');\n            var lightboxLinks = galleryWrapper.querySelectorAll(`.fb-image-gallery-item`);\n            var galleryImages = Array.from(lightboxLinks);\n            var currentIndex = 0;\n            \n            function openLightbox(index) {\n                currentIndex = index;\n                var lightbox = document.createElement('div');\n                lightbox.classList.add('lightbox', blockID);\n                lightbox.innerHTML = `\n                    <div class=\"lightbox-content\">\n                        <button class=\"lightbox-close\">&times;</button>\n                        <div class=\"lightbox-counter\">${currentIndex + 1} / ${galleryImages.length}</div>\n                        <button class=\"lightbox-prev\">&#10094;</button>\n                        <button class=\"lightbox-next\">&#10095;</button>\n                        <div class=\"lightbox-image-container\">\n                            <img src=\"${galleryImages[currentIndex].getAttribute('href')}\" alt=\"\">\n                        </div>\n                        <div class=\"lightbox-thumbnails\">\n                            ${galleryImages.map(function(img, idx) {\n                                return `\n                                    <img src=\"${img.getAttribute('href')}\" \n                                         class=\"thumbnail ${idx === currentIndex ? 'active' : ''}\" \n                                         data-index=\"${idx}\" />\n                                `;\n                            }).join('')}\n                        </div>\n                    </div>\n                `;\n                document.body.appendChild(lightbox);\n                \n                // Add event listeners for lightbox buttons and thumbnails\n                lightbox.querySelector('.lightbox-close').addEventListener('click', closeLightbox);\n                lightbox.querySelector('.lightbox-prev').addEventListener('click', prevImage);\n                lightbox.querySelector('.lightbox-next').addEventListener('click', nextImage);\n                lightbox.querySelectorAll('.thumbnail').forEach(function(thumbnail) {\n                    thumbnail.addEventListener('click', function(e) {\n                        currentIndex = parseInt(e.target.getAttribute('data-index'));\n                        updateLightboxImage();\n                    });\n                });\n                \n                // Add keydown event listener for navigation with arrow keys\n                document.addEventListener('keydown', handleKeyNavigation);\n                \n                function closeLightbox() {\n                    lightbox.remove();\n                    document.removeEventListener('keydown', handleKeyNavigation);\n                }\n                \n                function nextImage() {\n                    currentIndex = (currentIndex + 1) % galleryImages.length;\n                    updateLightboxImage();\n                }\n                \n                function prevImage() {\n                    currentIndex = (currentIndex - 1 + galleryImages.length) % galleryImages.length;\n                    updateLightboxImage();\n                }\n                \n                function updateLightboxImage() {\n                    var newImage = galleryImages[currentIndex].getAttribute('href');\n                    lightbox.querySelector('.lightbox-image-container img').src = newImage;\n                    lightbox.querySelector('.lightbox-counter').textContent = `${currentIndex + 1} / ${galleryImages.length}`;\n                    lightbox.querySelectorAll('.thumbnail').forEach(function(thumb, idx) {\n                        thumb.classList.toggle('active', idx === currentIndex);\n                    });\n                }\n                \n                function handleKeyNavigation(event) {\n                    if (event.key === 'ArrowRight') {\n                        nextImage();\n                    } else if (event.key === 'ArrowLeft') {\n                        prevImage();\n                    } else if (event.key === 'Escape') {\n                        closeLightbox();\n                    }\n                }\n            }\n            \n            galleryImages.forEach(function(link, index) {\n                link.addEventListener('click', function(event) {\n                    event.preventDefault();\n                    openLightbox(index);\n                });\n            });\n        });\n    }\n    \n    var setupDone = false;\n    \n    function setupInitialization() {\n        if (setupDone) return;\n        setupDone = true;\n        \n        if (document.readyState === 'complete' || document.readyState === 'interactive') {\n            setTimeout(initImageGallery, 100);\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", function() {\n                setTimeout(initImageGallery, 100);\n            });\n        }\n        \n        if (typeof window !== 'undefined') {\n            var lastUrl = window.location.href;\n            var urlObserver = new MutationObserver(function() {\n                if (lastUrl !== window.location.href) {\n                    lastUrl = window.location.href;\n                    setTimeout(initImageGallery, 300);\n                }\n            });\n            \n            urlObserver.observe(document.body, { childList: true, subtree: true });\n        }\n    }\n    \n    setupInitialization();\n    \n    window.reinitImageGallery = initImageGallery;\n})();"],"names":["initImageGallery","galleryWrappers","document","querySelectorAll","forEach","galleryWrapper","blockID","getAttribute","lightboxLinks","galleryImages","Array","from","currentIndex","openLightbox","index","lightbox","createElement","classList","add","innerHTML","concat","length","map","img","idx","join","body","appendChild","querySelector","addEventListener","closeLightbox","prevImage","nextImage","thumbnail","e","parseInt","target","updateLightboxImage","handleKeyNavigation","remove","removeEventListener","newImage","src","textContent","thumb","toggle","event","key","link","preventDefault","setupDone","setupInitialization","readyState","setTimeout","window","lastUrl","location","href","urlObserver","MutationObserver","observe","childList","subtree","reinitImageGallery"],"sourceRoot":""}