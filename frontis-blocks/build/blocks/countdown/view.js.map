{"version":3,"file":"blocks/countdown/view.js","mappings":"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","sources":["webpack://frontis-blocks/./src/blocks/countdown/view.js"],"sourcesContent":["\n// document.addEventListener(\"DOMContentLoaded\", () => {\n// \t// Find all countdown blocks on the page\n// \tconst countdownBlocks = document.querySelectorAll(\"[data-target-date]\");\n\n// \tcountdownBlocks.forEach((block) => {\n// \t\tconst targetDate = block.getAttribute(\"data-target-date\");\n\n// \t\tif (!targetDate) return;\n\n// \t\tconst daysElem = block.querySelector(\".fb-count-down-time.days\");\n// \t\tconst hoursElem = block.querySelector(\".fb-count-down-time.hours\");\n// \t\tconst minutesElem = block.querySelector(\".fb-count-down-time.minutes\");\n// \t\tconst secondsElem = block.querySelector(\".fb-count-down-time.seconds\");\n\n// \t\tconst formatTime = (time) => (time < 10 ? `0${time}` : time);\n\n// \t\tconst updateCountdown = () => {\n// \t\t\tconst now = new Date().getTime();\n// \t\t\tconst distance = new Date(targetDate).getTime() - now;\n\n// \t\t\tif (distance < 0) {\n// \t\t\t\t// Countdown expired\n// \t\t\t\tdaysElem.textContent = \"00\";\n// \t\t\t\thoursElem.textContent = \"00\";\n// \t\t\t\tminutesElem.textContent = \"00\";\n// \t\t\t\tsecondsElem.textContent = \"00\";\n// \t\t\t\treturn;\n// \t\t\t}\n\n// \t\t\tconst days = formatTime(Math.floor(distance / (1000 * 60 * 60 * 24)));\n// \t\t\tconst hours = formatTime(\n// \t\t\t\tMath.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n// \t\t\t);\n// \t\t\tconst minutes = formatTime(\n// \t\t\t\tMath.floor((distance % (1000 * 60 * 60)) / (1000 * 60))\n// \t\t\t);\n// \t\t\tconst seconds = formatTime(Math.floor((distance % (1000 * 60)) / 1000));\n\n// \t\t\tif (daysElem) daysElem.textContent = days;\n// \t\t\tif (hoursElem) hoursElem.textContent = hours;\n// \t\t\tif (minutesElem) minutesElem.textContent = minutes;\n// \t\t\tif (secondsElem) secondsElem.textContent = seconds;\n// \t\t};\n\n// \t\t// Update countdown every second\n// \t\tsetInterval(updateCountdown, 1000);\n// \t\tupdateCountdown();\n// \t});\n// });\n\n(function() {\n    function initCountdown() {\n        document.querySelectorAll(\"[data-target-date]\").forEach(function(block) {\n            var targetDate = block.getAttribute(\"data-target-date\");\n            \n            if (!targetDate) return;\n            \n            var daysElem = block.querySelector(\".fb-count-down-time.days\");\n            var hoursElem = block.querySelector(\".fb-count-down-time.hours\");\n            var minutesElem = block.querySelector(\".fb-count-down-time.minutes\");\n            var secondsElem = block.querySelector(\".fb-count-down-time.seconds\");\n            \n            function formatTime(time) {\n                return time < 10 ? \"0\" + time : time;\n            }\n            \n            function updateCountdown() {\n                var now = new Date().getTime();\n                var distance = new Date(targetDate).getTime() - now;\n                \n                if (distance < 0) {\n                    // Countdown expired\n                    daysElem && (daysElem.textContent = \"00\");\n                    hoursElem && (hoursElem.textContent = \"00\");\n                    minutesElem && (minutesElem.textContent = \"00\");\n                    secondsElem && (secondsElem.textContent = \"00\");\n                    return;\n                }\n                \n                var days = formatTime(Math.floor(distance / (1000 * 60 * 60 * 24)));\n                var hours = formatTime(Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n                var minutes = formatTime(Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)));\n                var seconds = formatTime(Math.floor((distance % (1000 * 60)) / 1000));\n                \n                daysElem && (daysElem.textContent = days);\n                hoursElem && (hoursElem.textContent = hours);\n                minutesElem && (minutesElem.textContent = minutes);\n                secondsElem && (secondsElem.textContent = seconds);\n            }\n            \n            // Update countdown every second\n            setInterval(updateCountdown, 1000);\n            updateCountdown();\n        });\n    }\n    \n    var setupDone = false;\n    \n    function setupInitialization() {\n        if (setupDone) return;\n        setupDone = true;\n        \n        if (document.readyState === 'complete' || document.readyState === 'interactive') {\n            setTimeout(initCountdown, 100);\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", function() {\n                setTimeout(initCountdown, 100);\n            });\n        }\n        \n        if (typeof window !== 'undefined') {\n            var lastUrl = window.location.href;\n            var urlObserver = new MutationObserver(function() {\n                if (lastUrl !== window.location.href) {\n                    lastUrl = window.location.href;\n                    setTimeout(initCountdown, 300);\n                }\n            });\n            \n            urlObserver.observe(document.body, { childList: true, subtree: true });\n        }\n    }\n    \n    setupInitialization();\n    \n    window.reinitCountdown = initCountdown;\n})();\n"],"names":["initCountdown","document","querySelectorAll","forEach","block","targetDate","getAttribute","daysElem","querySelector","hoursElem","minutesElem","secondsElem","formatTime","time","updateCountdown","now","Date","getTime","distance","textContent","days","Math","floor","hours","minutes","seconds","setInterval","setupDone","setupInitialization","readyState","setTimeout","addEventListener","window","lastUrl","location","href","urlObserver","MutationObserver","observe","body","childList","subtree","reinitCountdown"],"sourceRoot":""}