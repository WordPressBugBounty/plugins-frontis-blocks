(()=>{function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}!function(){function e(){document.querySelectorAll(".fb-progressbar-item").forEach(function(t){if(!t.hasAttribute("data-progressbar-init")){t.setAttribute("data-progressbar-init","true");var e=parseInt(t.dataset.progress),r=t.dataset.progressbarType.toLowerCase(),n=t.querySelector(".fb-progressbar-line"),o=t.querySelectorAll(".fb-progressbar-number");"vertical"===r?(n.style.height="0%",n.style.bottom="0",n.style.top="auto"):n.style.width="0%";var a=!1,i=new IntersectionObserver(function(s){s.forEach(function(s){s.isIntersecting&&(function(){if(!a){a=!0;var t=0,i=setInterval(function(){t>=e?clearInterval(i):(t++,"vertical"===r?(n.style.height=t+"%",n.style.width="100%"):(n.style.width=t+"%",n.style.height="100%"),o.forEach(function(e){return e.textContent=t+"%"}))},15)}}(),i.unobserve(t))})},{threshold:.5});i.observe(t)}})}window.reinitProgressBars=e,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",e):e(),new MutationObserver(function(r){var n,o=function(e,r){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,r){if(e){if("string"==typeof e)return t(e,r);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(e))||r&&e&&"number"==typeof e.length){n&&(e=n);var _n=0,o=function(){};return{s:o,n:function(){return _n>=e.length?{done:!0}:{done:!1,value:e[_n++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var t=n.next();return i=t.done,t},e:function(t){s=!0,a=t},f:function(){try{i||null==n.return||n.return()}finally{if(s)throw a}}}}(r);try{for(o.s();!(n=o.n()).done;){var a=n.value;if(a.addedNodes.length||a.removedNodes.length){e();break}}}catch(t){o.e(t)}finally{o.f()}}).observe(document.body,{childList:!0,subtree:!0})}()})();