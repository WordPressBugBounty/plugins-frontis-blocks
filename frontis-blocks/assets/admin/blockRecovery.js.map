{"version":3,"file":"blockRecovery.js","mappings":"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","sources":["webpack://frontis-blocks/./admin/block-recovery/attempt-recovery.js","webpack://frontis-blocks/./admin/block-recovery/is-invalid.js","webpack://frontis-blocks/external window [\"wp\",\"blocks\"]","webpack://frontis-blocks/external window [\"wp\",\"data\"]","webpack://frontis-blocks/external window [\"wp\",\"domReady\"]","webpack://frontis-blocks/external window [\"wp\",\"i18n\"]","webpack://frontis-blocks/webpack/bootstrap","webpack://frontis-blocks/webpack/runtime/compat get default export","webpack://frontis-blocks/webpack/runtime/define property getters","webpack://frontis-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://frontis-blocks/webpack/runtime/make namespace object","webpack://frontis-blocks/./admin/block-recovery/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select, dispatch, subscribe } from '@wordpress/data';\nimport {\n\tcreateBlock,\n\tparse,\n\tserialize,\n\tgetBlockType,\n\tisReusableBlock,\n} from '@wordpress/blocks';\nimport { isInvalid } from './is-invalid';\nimport { __ } from '@wordpress/i18n';\n\n// This plugin is based on the code at the following URL.\n// https://github.com/WordPress/gutenberg/issues/16425#issuecomment-652910137\n// https://github.com/brainstormforce/ultimate-addons-for-gutenberg/blob/d1dfc15b348c5a59a1394bb2d7f3bcecddb7a2f1/blocks-config/uagb-controls/autoBlockRecovery.js\n// https://github.com/gambitph/Stackable/blob/47258bd06ee797b58e2a5e1ec3d2357ad9d98a14/src/deprecated/v2/plugins/auto-block-recovery/attempt-recovery.js\n// https://wpstackable.com/blog/how-to-recover-all-broken-blocks-in-one-command-in-wordpress/\n\n// Runs an auto-attempt recovery on all the blocks.\nexport const autoAttemptRecovery = () => {\n\tsetTimeout( () => {\n\t\tconst unsubscribe = subscribe( () => {\n\t\t\tif (\n\t\t\t\tselect( 'core' ).getEntityRecords( 'postType', 'wp_block' ) !==\n\t\t\t\tnull\n\t\t\t) {\n\t\t\t\tunsubscribe();\n\t\t\t\tconst mainBlocks = recoverBlocks(\n\t\t\t\t\tselect( 'core/block-editor' ).getBlocks()\n\t\t\t\t);\n\t\t\t\t// Replace the recovered blocks with the new ones.\n\t\t\t\tmainBlocks.forEach( ( block ) => {\n\t\t\t\t\tif ( block.isReusable && block.ref ) {\n\t\t\t\t\t\t// Update the reusable blocks.\n\t\t\t\t\t\tdispatch( 'core' )\n\t\t\t\t\t\t\t.editEntityRecord(\n\t\t\t\t\t\t\t\t'postType',\n\t\t\t\t\t\t\t\t'wp_block',\n\t\t\t\t\t\t\t\tblock.ref,\n\t\t\t\t\t\t\t\t{ content: serialize( block.blocks ) }\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then();\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( block.recovered && block.replacedClientId ) {\n\t\t\t\t\t\tdispatch( 'core/block-editor' ).replaceBlock(\n\t\t\t\t\t\t\tblock.replacedClientId,\n\t\t\t\t\t\t\tblock\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}, 0 );\n};\n\n// 再帰的にリカバリーを行う\nconst recursivelyRecoverInvalidBlockList = ( blocks ) => {\n\tconst currentBlocks = [ ...blocks ];\n\tlet isRecovered = false;\n\tconst recursivelyRecoverBlocks = ( willRecoverBlocks ) => {\n\t\twillRecoverBlocks.forEach( ( block ) => {\n\t\t\tif ( isInvalid( block ) ) {\n\t\t\t\tisRecovered = true;\n\t\t\t\tconst newBlock = recoverBlock( block );\n\t\t\t\tfor ( const key in newBlock ) {\n\t\t\t\t\tblock[ key ] = newBlock[ key ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( block.innerBlocks.length ) {\n\t\t\t\trecursivelyRecoverBlocks( block.innerBlocks );\n\t\t\t}\n\t\t} );\n\t};\n\n\trecursivelyRecoverBlocks( currentBlocks );\n\treturn [ currentBlocks, isRecovered ];\n};\n\n// start recovery blocks\nexport const recoverBlocks = ( allBlocks ) => {\n\treturn allBlocks.map( ( block ) => {\n\t\tconst currentBlock = block;\n\n\t\tif ( isReusableBlock( getBlockType( block.name ) ) ) {\n\t\t\tconst {\n\t\t\t\tattributes: { ref },\n\t\t\t} = block;\n\t\t\tconst parsedBlocks =\n\t\t\t\tparse(\n\t\t\t\t\tselect( 'core' ).getEntityRecords( 'postType', 'wp_block', {\n\t\t\t\t\t\tinclude: [ ref ],\n\t\t\t\t\t} )?.[ 0 ]?.content?.raw\n\t\t\t\t) || [];\n\n\t\t\tconst [ recoveredBlocks, isRecovered ] =\n\t\t\t\trecursivelyRecoverInvalidBlockList( parsedBlocks );\n\n\t\t\tif ( isRecovered ) {\n\t\t\t\tconsoleMessage( currentBlock );\n\t\t\t\treturn {\n\t\t\t\t\tblocks: recoveredBlocks,\n\t\t\t\t\tisReusable: true,\n\t\t\t\t\tref,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( currentBlock.innerBlocks && currentBlock.innerBlocks.length ) {\n\t\t\tconst newInnerBlocks = recoverBlocks( currentBlock.innerBlocks );\n\t\t\tif (\n\t\t\t\tnewInnerBlocks.some( ( InnerBlock ) => InnerBlock.recovered )\n\t\t\t) {\n\t\t\t\tcurrentBlock.innerBlocks = newInnerBlocks;\n\t\t\t\tcurrentBlock.replacedClientId = currentBlock.clientId;\n\t\t\t\tcurrentBlock.recovered = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( isInvalid( currentBlock ) ) {\n\t\t\tconst newBlock = recoverBlock( currentBlock );\n\t\t\tnewBlock.replacedClientId = currentBlock.clientId;\n\t\t\tnewBlock.recovered = true;\n\t\t\tconsoleMessage( currentBlock );\n\t\t\treturn newBlock;\n\t\t}\n\n\t\treturn currentBlock;\n\t} );\n};\n\n// Recovers one block.\nexport const recoverBlock = ( { name, attributes, innerBlocks } ) => {\n\treturn createBlock( name, attributes, innerBlocks );\n};\n\n// console message\nconst consoleMessage = ( block ) => {\n\tconst message =\n\t\t'%c' +\n\t\t__( 'Notice: ', 'auto-block-recovery' ) +\n\t\tblock.name +\n\t\t__( ' was auto recovery.', 'auto-block-recovery' ) +\n\t\t'\\n' +\n\t\t__(\n\t\t\t'Please check this page in preview and update this page.',\n\t\t\t'auto-block-recovery'\n\t\t);\n\n\tconsole.log(\n\t\tmessage,\n\t\t'width: 100%; padding: 6px 12px; background-color: #fef8ee; color: #1e1e1e;'\n\t);\n};\n","export const isInvalid = ( block ) => {\n\tconst { name, isValid, validationIssues } = block;\n\n\tif ( ! name ) {\n\t\treturn false;\n\t}\n\n\tif ( isValid || ! validationIssues.length ) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport domReady from '@wordpress/dom-ready';\nimport { autoAttemptRecovery } from './attempt-recovery';\n\nexport const initAutoAttemptRecovery = () => {\n\tif ( window._wpLoadBlockEditor ) {\n\t\twindow._wpLoadBlockEditor.then( () => {\n\t\t\tautoAttemptRecovery();\n\t\t} );\n\t}\n};\n\ndomReady( initAutoAttemptRecovery );\n"],"names":["select","dispatch","subscribe","createBlock","parse","serialize","getBlockType","isReusableBlock","isInvalid","__","autoAttemptRecovery","setTimeout","unsubscribe","getEntityRecords","mainBlocks","recoverBlocks","getBlocks","forEach","block","isReusable","ref","editEntityRecord","content","blocks","then","recovered","replacedClientId","replaceBlock","recursivelyRecoverInvalidBlockList","currentBlocks","_toConsumableArray","isRecovered","recursivelyRecoverBlocks","willRecoverBlocks","newBlock","recoverBlock","key","innerBlocks","length","allBlocks","map","currentBlock","name","_select$getEntityReco","attributes","parsedBlocks","include","raw","_recursivelyRecoverIn","_recursivelyRecoverIn2","_slicedToArray","recoveredBlocks","consoleMessage","newInnerBlocks","some","InnerBlock","clientId","_recoverBlocks","_ref","message","console","log","isValid","validationIssues","domReady","initAutoAttemptRecovery","window","_wpLoadBlockEditor"],"sourceRoot":""}